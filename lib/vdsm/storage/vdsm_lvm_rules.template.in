# SPDX-FileCopyrightText: Red Hat, Inc. and/or its affiliates.
# SPDX-License-Identifier: GPL-2.0-or-later

"""
Generate vdsm lvm udev rule
"""
import sys

env = {
    "uuid": "-".join(("[a-f0-9]" * 8,
                      "[a-f0-9]" * 4,
                      "[a-f0-9]" * 4,
                      "[a-f0-9]" * 4,
                      "[a-f0-9]" * 12)),
    "temp": "[a-zA-Z0-9]" * 8,
}


def write(fmt):
    sys.stdout.write(fmt % env)


write("""\
# SPDX-FileCopyrightText: Red Hat, Inc. and/or its affiliates.
# SPDX-License-Identifier: GPL-2.0-or-later

# Vdsm udev rules for lvm

# "add" event is processed on coldplug only, so we need "change", too.
ACTION!="add|change", GOTO="lvm_end"

# Filter out vgs which do not look like a vdsm vg
ENV{DM_VG_NAME}!="%(uuid)s", GOTO="lvm_end"

# Volumes used as vdsm images
# WARNING: we cannot use OWNER, GROUP and MODE since using any of them will
# change the selinux label to the default, causing vms to pause after extending
# disks. https://bugzilla.redhat.com/1147910
ENV{DM_LV_NAME}=="%(uuid)s", RUN+="@CHOWN_PATH@ @VDSMUSER@:@QEMUGROUP@ $env{DEVNAME}", GOTO="lvm_end"

# Temporary volumes - not accessed by libvirt/qemu
ENV{DM_LV_NAME}=="%(uuid)s_MERGE", OWNER:="@VDSMUSER@", GROUP:="@QEMUGROUP@", GOTO="lvm_end"

# Special volumes used by vdsm
ENV{DM_LV_NAME}=="metadata|inbox|outbox", MODE:="0600", OWNER:="@VDSMUSER@", GROUP:="@QEMUGROUP@", GOTO="lvm_end"

# Special volumes used by sanlock
ENV{DM_LV_NAME}=="ids|leases|xleases", MODE:="0660", OWNER:="@VDSMUSER@", GROUP:="@SNLKGROUP@", GOTO="lvm_end"

LABEL="lvm_end"
""")
