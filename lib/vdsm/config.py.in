#
# Copyright 2011-2016 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#
# Refer to the README and COPYING files for full details of the license
#
"""
This module creates vdsm configuration from a default vdsm configuration file
under /etc/vdsm/vdsm.conf. It reads conf files from drop-in dirs and updates
the configuration according to the files.

The semantics of the directories and the search order is as follows:

- /etc/vdsm/vdsm.conf - for user configuration. We install this
  file if missing, and never touch this file during upgrade.
- /etc/vdsm/vdsm.conf.d/ - for admin drop-in conf files.
- /usr/lib/vdsm/vdsm.conf.d/ - for vendor drop-in configuration files.
- /var/run/vdsm/vdsm.conf.d/ - for admin temporary configuration.

Files with a .conf suffix can be placed into any of the vdsm.conf.d drop-in
directories.

The priority of the configuration files is determined by the number prefix of
each file.
"""

from __future__ import absolute_import
import os
from six.moves import configparser
import textwrap
import glob

_SYSCONFDIR = '@sysconfdir@'
_DROPPIN_BASES = ("/usr/lib/", "/run/", _SYSCONFDIR)


parameters = [
    # Section: [vars]
    ('vars', [

        ('core_dump_enable', 'true',
            'Enable core dump.'),

        ('host_mem_reserve', '256',
            'Reserves memory for the host to prevent VMs from using all the '
            'physical pages. The values are in Mbytes.'),

        ('guest_ram_overhead', '65', None),

        ('extra_mem_reserve', '65',
            'Memory reserved for non-vds-administered programs.'),

        ('fake_nics', 'dummy_*,veth_*',
            'Comma-separated list of fnmatch-patterns for dummy hosts nics to '
            'be shown to vdsm.'),

        ('net_configurator', 'ifcfg',
            'Whether to use "ifcfg", "pyroute2" or "iproute2" to configure '
            'networks. pyroute2 and iproute2 configurators are not ready '
            'yet for general usage.'),

        ('net_persistence', 'unified',
            'Whether to use "ifcfg" or "unified" persistence for networks.'),

        ('ethtool_opts', '',
            'Which special ethtool options should be applied to NICs after '
            'they are taken up, e.g. "lro off" on buggy devices. '
            'To apply options to a single interface, '
            'set ethtool_opts.iface_name.'),

        ('nic_model', 'rtl8139,pv',
            'NIC model is rtl8139, ne2k_pci pv or any other valid device '
            'recognized by kvm/qemu if a coma separated list given then a '
            'NIC per device will be created.'),

        ('migration_destination_timeout', '21600',
            'Maximum time the destination waits for the migration to finish.'),

        ('migration_progress_timeout', '240',
            'Maximum time the source host waits during a migration in case '
            'that there is no progress. If the time has passed, the migration '
            'will be aborted.'),

        ('migration_max_time_per_gib_mem', '64',
            'The maximum time in seconds per GiB memory a migration may take '
            'before the migration will be aborted by the source host. '
            'Setting this value to 0 will disable this feature.'),

        ('migration_listener_timeout', '30',
            'Time to wait (in seconds) for migration destination to start '
            'listening before migration begins.'),

        ('migration_max_bandwidth', '52',
            'Maximum bandwidth for migration, in MiBps, 0 means libvirt\'s '
            'default, since 0.10.x default in libvirt is unlimited'),

        ('migration_monitor_interval', '10',
            'How often (in seconds) should the monitor thread pulse, 0 means '
            'the thread is disabled.'),

        ('migration_ovs_hook_enabled', 'false',
            'Whether migration hook should be enabled or not. It must be used '
            'if you need to support VM migration between hosts with OVS '
            'switch involved as VDSM network configurator.'),

        ('hidden_nics', 'w*,usb*',
            'Comma-separated list of fnmatch-patterns for host nics to be '
            'hidden from vdsm.'),

        ('hidden_bonds', '',
            'Comma-separated list of fnmatch-patterns for host bonds to be '
            'hidden from vdsm.'),

        ('hidden_vlans', '',
            'Comma-separated list of fnmatch-patterns for host vlans to be '
            'hidden from vdsm. vlan names must be in the format "dev.VLANID" '
            '(e.g. eth0.100, em1.20, eth2.200). '
            'vlans with alternative names must be hidden from vdsm '
            '(e.g. eth0.10-fcoe, em1.myvlan100, vlan200)'),

        ('migration_downtime', '500',
            'Maximum allowed downtime for live migration in milliseconds '
            '(anything below 100ms is ignored) if you do not care about '
            'liveness of migration, set to a very high value, such as '
            '600000.'),

        ('migration_downtime_delay', '100',
            'Timespan in seconds per GiB of RAM, used on the source side '
            'to reach incrementally the final value of migration_downtime. '),

        ('migration_downtime_steps', '5',
            'Incremental steps used to reach migration_downtime.'),

        ('max_outgoing_migrations', '2',
            'Maximum concurrent outgoing migrations'),

        ('max_incoming_migrations', '2',
            'Maximum concurrent incoming migrations'),

        ('migration_retry_timeout', '10',
            'Time (in sec) to wait before retrying failed migration.'),

        ('sys_shutdown_timeout', '120',
            'Destroy and shutdown timeouts (in sec) before completing the '
            'action.'),

        ('user_shutdown_timeout', '30',
            'Grace period (seconds) to let guest user close his '
            'applications before shutdown.'),

        ('guest_agent_timeout', '30',
            'Time (in sec) to wait for guest agent.'),

        ('guest_lifecycle_event_reply_timeout', '10',
            'Time (in sec) to wait for the guest agent to reply on lifecycle'
            ' events (such as before_migration/before_hibernation'),

        ('vm_command_timeout', '60',
            'Time to wait (in seconds) for vm to respond to a monitor '
            'command, 30 secs is a nice default. Set to 300 if the vm is '
            'expected to freeze during cluster failover.'),

        ('hotunplug_timeout', '30',
            'Time to wait (in seconds) for a VM to detach its disk'),

        ('hotunplug_check_interval', '1',
            'Time to wait (in seconds) between consecutive checks for device'
            'removal'),

        ('vm_watermark_interval', '2',
            'How often should we check drive watermark on block storage for '
            'automatic extension of thin provisioned volumes (seconds).'),

        ('vm_sample_interval', '15', None),

        ('vm_sample_jobs_interval', '15', None),

        ('vm_sample_numa_interval', '15',
            'How often should we sample NUMA CPU assignments'),

        ('host_sample_stats_interval', '15', None),

        ('ssl', 'true',
            'Whether to use ssl encryption and authentication.'),

        ('vds_responsiveness_timeout', '60', None),

        ('vdsm_nice', '-5', None),

        ('qemu_drive_cache', 'none', None),

        ('fake_kvm_support', 'false', None),

        ('fake_kvm_architecture', 'x86_64',
            'Choose the target architecture of the fake KVM mode'),

        ('fake_kvm_memory', '0', 'Set memory of fake KVM hosts. '
         'Set to \'0\' to use supplied memory value'),

        ('fake_vmstats_enable', 'false', 'Enable reporting of fake VM stats.'),

        ('fake_sriov_enable', 'false',
         'Enable reporting of fake SR-IOV devices.'),

        ('xmlrpc_enable', 'true', 'Enable the xmlrpc server'),

        ('xmlrpc_http11', 'true',
            'Enable HTTP/1.1 keep-alive connections'),

        ('jsonrpc_enable', 'true', 'Enable the JSON RPC server'),

        ('broker_enable', 'false', 'Enable outgoing connection to broker'),

        ('report_host_threads_as_cores', 'false',
            'Count each cpu hyperthread as an individual core'),

        ('libvirt_env_variable_log_filters', '',
            'Specify the log filters to track libvirt calls'),

        ('libvirt_env_variable_log_outputs', '',
            'Specify the output to track libvirt calls'),

        ('transient_disks_repository', '@VDSMLIBDIR@/transient',
            'Local path to the transient disks repository.'),

        ('ssl_protocol', 'tlsv1',
            'SSL protocol used by encrypted connection'),

        ('connection_stats_timeout', '3600',
            'Time in seconds defining how frequently we log transport stats'),

        ('cpu_affinity', 'auto',
            'Use the special string value "auto" (default value) '
            'to make Vdsm pick the first online core, starting with the '
            'second logical core. '
            'If only the first logical core is online, Vdsm will use it. '
            'To explicitely select the CPU cores on which VDSM is allowed to '
            'run, use a comma separated list of CPU cores, expressed as '
            'integers starting from zero. '
            'To disable the affinity, allowing Vdsm to run on all the '
            'online cores, use the empty value. '
            'Valid examples: "auto", "1", "0,1", ""'),

        ('ssl_implementation', '@SSL_IMPLEMENTATION@',
            'Specifies which ssl implementation should be used. '
            'There are 2 options: '
            '"m2c" to use the m2crypto module '
            '"ssl" to use the standard python ssl module'),

        ('migration_create_timeout', '600',
            'Time in seconds defining how long we are going to wait for '
            'create migration response.'),

        ('host_numa_scheduling', 'true',
            'Enable implicit scheduling of VMs to properly match numa '
            'topology. Explicit settings sent from engine override '
            'the option.'),
    ]),

    # Section: [rpc]
    ('rpc', [

        ('worker_threads', '8',
            'Number of worker threads to serve jsonrpc server.'),

        ('tasks_per_worker', '10',
            'Max number of tasks which can be queued per workers.'),

    ]),

    # Section: [mom]
    ('mom', [

        ('conf', '@CONFDIR@/mom.conf', 'mom configuration file'),

        ('tuning_policy', '01-parameters',
            'name of the mom policy to be updated from '
            'updatePolicyParameters API call'),

    ]),

    # Section: [irs]
    ('irs', [

        ('irs_enable', 'true', None),

        ('repository', '@VDSMREPO@',
            'Image repository.'),

        ('hsm_tasks', '%(repository)s/hsm-tasks', None),

        ('images', '/images', None),

        ('irsd', '%(images)s/irsd', None),

        ('volume_utilization_percent', '50',
            'Together with volume_utilization_chunk_mb, set the minimal free '
            'space before a thin provisioned block volume is extended. Use '
            'lower values to extend earlier.'),

        ('volume_utilization_chunk_mb', '1024',
            'Size of extension chunk in megabytes, and together with '
            'volume_utilization_percent, set the free space limit. Use higher '
            'values to extend in bigger chunks.'),

        ('vol_size_sample_interval', '60',
            'How often should the volume size be checked (seconds).'),

        ('scsi_rescan_maximal_timeout', '30',
            'The maximal number of seconds to wait for scsi scan to return.'),

        ('udev_settle_timeout', '5',
            'Maximum number of seconds to wait until udev events are '
            'processed. Used after rescanning iSCSI and FC connections, '
            'after connecting to iSCSI target, and after mounting and '
            'umounting file systems.'),

        ('sd_health_check_delay', '10',
            'Storage domain health check delay, the amount of seconds to '
            'wait between two successive run of the domain health check.'),

        ('nfs_mount_options', 'soft,nosharecache',
            'NFS mount options, comma-separated list (NB: no white space '
            'allowed!)'),

        ('lock_util_path', '@LIBEXECDIR@', None),

        ('lock_cmd', 'spmprotect.sh', None),

        ('free_lock_cmd', 'spmstop.sh', None),

        ('thread_pool_size', '10',
            'The number of threads to allocate to the task manager.'),

        ('max_tasks', '500', None),

        ('lvm_dev_whitelist', '', None),

        ('md_backup_versions', '30', None),

        ('md_backup_dir', '@BACKUPDIR@', None),

        ('maximum_allowed_pvs', '8',
            'The number of PVs per VG has a hard-coded limit of 10.'),

        ('repo_stats_cache_refresh_timeout', '300', None),

        ('task_resource_default_timeout', '120000', None),

        ('prepare_image_timeout', '600000', None),

        ('gc_blocker_force_collect_interval', '60', None),

        ('maximum_domains_in_pool', '100',
            'Process pool configuration.'),

        ('process_pool_timeout', '60', None),

        ('max_ioprocess_idle_time', '60',
            'TTL of an unused IOProcess instance'),

        ('process_pool_max_slots_per_domain', '10', None),

        ('process_pool_max_queued_slots_per_domain', '10', None),

        ('iscsi_default_ifaces', 'default',
            'Comma seperated ifaces to connect with. '
            'i.e. iser,default'),

        ('use_volume_leases', 'false',
            'Whether to use the volume leases or not.'),

        ('progress_interval', '30',
            'Time to wait (in seconds) between consecutive progress reports '
            'during long operations such as copying images (default 30)'),

        ('qcow2_compat', '0.10',
            'Recent qemu-img supports two incompatible qcow2 versions. '
            'We use 0.10 format by default so hosts with older qemu '
            'can consume images created by newer versions. '
            'See https://bugzilla.redhat.com/1139707 '
            '(supported versions: 0.10, 1.1)'),

        ('discard_enable', 'false',
            'Discards the storage used for a volume before removing it. '
            'This feature requires a discard support from the storage server. '
            'Physical discard operations are supported if the value of '
            '/sys/block/<device>/queue/discard_max_bytes is not zero.'),
    ]),

    # Section: [jobs]
    ('jobs', [
        ('autodelete_delay', '3600',
            'Automatically delete completed jobs from memory after the '
            'specified delay (in seconds).  When this value is negative '
            'autodelete will be disabled.'),
    ]),

    # Section: [addresses]
    ('addresses', [

        ('management_port', '54321',
            'Port on which the vdsmd XMPRPC server listens to network '
            'clients.'),

        ('management_ip', '::',
            'IP address on which the vdsmd server listens to network '
            'clients. '
            'Set to "0.0.0.0" to listen only on IPv4. '
            'Set to "::" to listen on both IPv4 & IPv6.'),

        ('guests_gateway_ip', '', None),

        ('broker_address', '127.0.0.1',
            'Address where the broker is listening at. Use an empty string '
            'for none'),

        ('broker_port', '5445',
            'Port where the broker is listening at.'),

        ('request_queues',
            'jms.topic.vdsm_requests,jms.topic.vdsm_irs_requests',
            'Queues for vdsm to subscribe to'),

        ('event_queue', 'jms.queue.events',
            'Queue used for events'),
    ]),

    # Section: [sampling]
    ('sampling', [

        ('periodic_workers', '4',
            'Number of worker threads to serve the periodic tasks.'
            ' This is for internal usage and may change without warning'),

        ('periodic_task_per_worker', '100',
            'Max number of tasks which can be queued on workers.'
            ' This is for internal usage and may change without warning'),

        ('max_workers', '30',
            'Maximum number of worker threads to serve the periodic tasks '
            'at the same time.'),
    ]),

    # Section: [metrics]
    ('metrics', [
        ('enabled', 'false',
            'Enable metrics collection (default false)'),

        ('collector_address', 'localhost',
            'Metrics collector address (default localhost)'),

        ('collector_type', 'statsd',
            'Metrics collector type (supporting statsd or hawkular)'),

        ('queue_size', '100',
            'Number of metrics messages to queue if collector is not'
            ' responsive. When the queue is full, oldest messages are'
            ' dropped. Used only by hawkular-client collector (default 100)'),
    ]),

    # Section: [devel]
    ('devel', [

        ('cpu_profile_enable', 'false',
            'Enable whole process profiling (requires yappi profiler).'),

        ('cpu_profile_filename', '/run/vdsm/vdsmd.prof',
            'Profile file name (/run/vdsm/vdsmd.prof)'),

        ('cpu_profile_format', 'pstat',
            'Profile file format (pstat, callgrind, ystat)'),

        ('cpu_profile_builtins', 'false',
            'Profile builtin functions used by standard Python modules. '
            'false by default.'),

        ('cpu_profile_clock', 'cpu',
            'Sets the underlying clock type (cpu, wall)'),

        ('memory_profile_enable', 'false',
            'Enable whole process profiling (requires dowser profiler).'),

        ('memory_profile_port', '9090',
            'Port on which the dowser Web UI will be reachable.'),

        ('manhole_enable', 'false',
            'Enable manhole debugging service (requires manhole package).'),

        ('coverage_enable', 'false',
            'Enable code coverage (requires python-coverage package). '
            'false by default. Use environment file /etc/sysconfig/vdsm to '
            'set COVERAGE_PROCESS_START and COVERAGE_FILE variables.'),

        ('health_monitor_enable', 'false',
            'Enable Vdsm health monitoring.'),

        ('health_check_interval', '60',
            'Number of seconds to wait between health checks.'),

        ('m2c_debug_enable', 'false',
            'Enable state information about the SSL connections which is by '
            'default logged to stderr.'),

        ('api_strict_mode', 'false',
            'Enable exception throwing when rpc data is not correct.'),
    ]),

    # Section: [gluster]
    ('gluster', [

        ('allowed_replica_counts', '1,3',
            'Only replica 1 and 3 are supported. This configuration is for '
            'development only. Value is comma delimeted.'),
    ]),

    # Section: [containers]
    ('containers', [

        ('cgroup_slice', 'machine',
            'The cgroup slice where containers will be started.'),

        ('network_name', 'ovirt',
            "Human-friendly name for the configuration of the containers' "
            "runtime network. Used only for identification."),

        ('network_bridge', 'ovirtmgmt',
            "Network bridge to use for the containers' networking"),

        ('network_gateway', '10.1.0.1',
            "The network gateway for the containers' network"),

        ('network_interface', 'eth1',
            "NIC to use for containers' network"),

        ('network_subnet', '10.1.0.0',
            "Private subnet address for the containers' network"),

        ('network_mask', '20',
            "The net mask for the containers' network"),
    ]),

    # Section: [tests]
    ('tests', [

        ('functional_jsonrpc_enable', 'false',
            'Enable jsonrpc when running functional tests.'),
    ]),

]


def set_defaults(config):
    for section, keylist in parameters:
        config.add_section(section)
        for key, value, comment in keylist:
            config.set(section, key, value)


def print_config():
    twp = textwrap.TextWrapper(initial_indent='# ', subsequent_indent='# ')

    print(twp.fill("VDSM Sample Configuration"))
    print('')

    for section, keylist in parameters:
        print("[%s]\n" % section)

        for key, value, comment in keylist:
            if comment:
                print(twp.fill(comment))
            print(twp.fill("%s = %s" % (key, value)))
            print('')


def load(name):
    cfg = configparser.ConfigParser()
    set_defaults(cfg)
    read_configs(cfg, name)
    return cfg


def read_configs(cfg, name):
    """This function is reading config files in a specific scheme

    The function reads - for one component - config files from several
    locations and in addition it is also reading configuration snippets
    from drop-in directories.
    This scheme allows to store the vendor provided (default) configuration
    in a different directory, and override it using either defaults from
    other packages which can then be put into the vendor drop-in dir,
    or users can overwrite the defaults, by placing a complete or partial
    configuration file into /etc or a drop-in directory.
    """
    default_conf = os.path.join(_SYSCONFDIR, name, name + '.conf')
    cfg.read(default_conf)

    dropins = []
    for path in _DROPPIN_BASES:
        pattern = os.path.join(path, name, name + '.conf.d', '*.conf')
        dropins.extend(glob.glob(pattern))

    dropins.sort(key=os.path.basename)
    cfg.read(dropins)


config = load('vdsm')

if __name__ == '__main__':
    print_config()
